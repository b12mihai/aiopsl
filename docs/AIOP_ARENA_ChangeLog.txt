fsl_cmdif_client.h: Updated documentation for cmdif_open(): the buffer must be 8 bytes aligned, relevant for GPP only
fsl_cmdif_server.h: Updated documentation for cmdif_session_open(): the buffer must be 8 bytes aligned, relevant for GPP only

slab.c, bman.c: ENGR00356178 - Change AIOP SL to honor userâ€™s requested alignment.
        (if user requests 16Byte alignment, user will get a 16Byte aligned buffer and the metadata will not be aligned)
slab.c: ENGR00356128 - Removed unneeded check for bpid's if their ID's out of range [0,15]

dbg.h, fsl_dbg.h: ENGR00354715 - update for macro DBG to use mutex and prevent message interleaving in multi-core AIOP (pr_xxx, sl_pr_xxx)
dpni_drv.c/fsl_dpni_drv.h: Added option to clear order scope by calling: dpni_drv_set_order_scope(ni, DPNI_DRV_NO_ORDER_SCOPE)

errors.h:                  removed fsl_os_exit()
app_process_packet.c:      rename app_process_packet_flow0 to app_process_packet and add __HOT_CODE
types_mw.h:                add macro: ENTRY_POINT __declspec(entry_point)

** AIOP SL Release v0.6.0.1 **
slab.c:      Update assert condition to allow calling slab create with alignment <= buffer size.
** AIOP SL Release v0.6.0 **
dpl.dts/dpl.dtb: Added option: "DPNI_OPT_TX_CONF_DISABLED" for DPNI objects to disable TX confirmation. Update your layout file accordingly.
fsl_dpni_drv.h : Added API for registering DPNI rx buffer layout requirements(head-room, tail-room, private-data-size)
cmdif_integration_test.c : Added SHBP_TEST_GPP - GPP acquires buffer and AIOP releases,
                                 SHBP_TEST_AIOP - AIOP acquires buffer and GPP releases.
                           See aiopsl\tests\cmdif\README.txt.
fsl_shbp_host.h : SHBP GPP side API changes, replaced struct shbp * with uint64_t.
fsl_shbp_flib.h : SHBP FLIB API changes, replaced struct shbp * with uint64_t.

fsl_dpni_drv.h/dpni_drv.c: update API for:
		dpni_get_num_of_ni to: dpni_drv_get_num_of_nis and expose to users.
		dpni_drv_set_rx_buffer_layout to: int dpni_drv_set_rx_buffer_layout(uint16_t ni_id, const struct dpni_drv_buf_layout *layout)
		dpni_drv_get_rx_buffer_layout to: int dpni_drv_get_rx_buffer_layout(uint16_t ni_id, struct dpni_drv_buf_layout *layout)
		dpni_drv_get_counter to: int dpni_drv_get_counter(uint16_t ni_id, enum dpni_drv_counter counter, uint64_t *value)
		dpni_drv_get_link_state to: int dpni_drv_get_link_state(uint16_t ni_id, struct dpni_drv_link_state *state)
		Added API for dpni_drv_enabe/disable(uint16_t ni_id) (dpni_drv_enable updates the second spid with ddr target pool)

dpni_drv.c/fsl_dpni_drv.h: Added API to support vlan: set, add, remove and clear filters (option should be set for dpni in layout: DPNI_OPT_VLAN_FILTER.
        int dpni_drv_clear_vlan_filters(uint16_t ni_id)
        int dpni_drv_set_vlan_filters(uint16_t ni_id, int en)
        int dpni_drv_add_vlan_id(uint16_t ni_id, uint16_t vlan_id)
        int dpni_drv_remove_vlan_id(uint16_t ni_id, uint16_t vlan_id)
        Added API to reset dpni counter:
        dpni_drv_reset_counter(uint16_t ni_id, enum dpni_drv_counter counter)

tests/cmdif/README.txt: Added description for the non backward compatible change in SHBP_TEST at cmdif_integration_test.c.
                        Each buffer inside this shbp should have the shbp address/handle written to the first 8 bytes.
fsl_shbp.h     : AIOP side SHBP API changes. Removed shbp structure wrapper. Added struct icontext *ic to all the APIs.
fsl_shbp_host.h: GPP/Host side SHBP API changes. Removed shbp structure wrapper.
shbp_flib.h    : Added user-defined field (16 bytes) to be used by the GPP host implementation.

Reorganize SHBP API and FLIB:
  new file : src/lib/fsl_shbp_host.h SHBP Host API for GPP
  renamed  : src/include/lib/fsl_shbp.h      -> src/lib/fsl_shbp_flib.h
  renamed  : src/include/lib/fsl_shbp_aiop.h -> src/include/lib/fsl_shbp.h

  API to be used by AIOP appliocation is : src/include/lib/fsl_shbp.h
  API to be used by GPP appliocation is : ssrc/lib/fsl_shbp_host.h

Reorganize CMDIF API and FLIB:
   renamed:    src/include/kernel/fsl_cmdif_flib_c.h -> src/kernel/inc/fsl_cmdif_flib_c.h
   renamed:    src/include/kernel/fsl_cmdif_fd.h     -> src/kernel/inc/fsl_cmdif_flib_fd.h
   renamed:    src/include/kernel/fsl_cmdif_flib_s.h -> src/kernel/inc/fsl_cmdif_flib_s.h


dpni_drv.c/fsl_dpni_drv.h: Added API to get dpni link state:
        int dpni_drv_get_link_state(uint16_t ni_id, struct dpni_link_state *state)
        Added API to clear unicast / multicast filters for given NI : (options should be set for dpni in layout DPNI_OPT_MULTICAST_FILTER, DPNI_OPT_UNICAST_FILTER)
        int dpni_drv_clear_mac_filters(uint16_t ni_id, uint8_t unicast, uint8_t multicast)
dpni_drv.c/fsl_dpni_drv.h: Added API for setting primary MAC address:
        int dpni_drv_set_primary_mac_addr(uint16_t niid, uint8_t mac_addr[NET_HDR_FLD_ETH_ADDR_SIZE])

apps.h: API changes and reorganization of apps.h.
        Many macros have been depricated but we keep it backward compatible for current release.
        See aiopsl\build\aiop_sim\apps\app_process_packet\src\apps.h.
        Removed SRU_SIZE.
        Removed g_aiop_lcf_ddr_size.
        Added   APP_DPNI_SPID_COUNT.
        Removed APPLICATION_DP_DDR_SIZE.
        Renamed DPNI_NUMBER_BUFFERS_IN_POOL to APP_DPNI_NUM_BUFS_IN_POOL.
        Renamed DPNI_BUFFER_SIZE_IN_POOL    to APP_DPNI_BUF_SIZE_IN_POOL
        Renamed DPNI_BUFFER_ALIGNMENT       to APP_DPNI_BUF_ALIGN_IN_POOL
        Renamed APP_MAX_NUM                 to APP_INIT_APP_MAX_NUM
        Renamed AIOP_TASKS_PER_CORE         to APP_INIT_TASKS_PER_CORE
        Renamed AIOP_SL_AND_APP_DDR_SIZE    to APP_MEM_DP_DDR_SIZE
        Renamed PEB_SIZE                    to APP_MEM_PEB_SIZE
        Renamed SYS_DDR1_SIZE               to APP_MEM_SYS_DDR1_SIZE
        Renamed CTLU_SYS_DDR_NUM_ENTRIES    to APP_CTLU_SYS_DDR_NUM_ENTRIES
        Renamed CTLU_DP_DDR_NUM_ENTRIES     to APP_CTLU_DP_DDR_NUM_ENTRIES
        Renamed CTLU_PEB_NUM_ENTRIES        to APP_CTLU_PEB_NUM_ENTRIES
        Renamed MFLU_SYS_DDR_NUM_ENTRIES    to APP_MFLU_SYS_DDR_NUM_ENTRIES
        Renamed MFLU_DP_DDR_NUM_ENTRIES     to APP_MFLU_DP_DDR_NUM_ENTRIES
        Renamed MFLU_PEB_NUM_ENTRIES        to APP_MFLU_PEB_NUM_ENTRIES

** AIOP SL Release v0.5.3.3 **
log.c/h, fsl_log.h: Implementation for printing log to buffer updated and moved from console.c to log.c.
                    The logger writes "START\n" in the beginning of the buffer and "END\n" after the last write to the buffer given by MC.
                    Writing to the buffer is done by: void log_print_to_buffer(char *str, uint16_t str_length). The print to buffer is cyclic.

dpl.dtb/dts: Moved ICID pool to DPC.
dpc.dtb/dts: New configuration file, UART port and log to buffer settings are set here.

dpni_drv.c: Set hard coded values for head room and tail room for:
                      Head room: 96 bytes
                      Tail room: 0 bytes

dpni_drv.c, fsl_dpni_drv.h:  Added API to receive DPNI ID / NI ID (AIOP internal)
                             int dpni_drv_get_dpni_id(uint16_t ni_id, uint16_t *dpni_id);
                             int dpni_drv_get_ni_id(uint16_t dpni_id, uint16_t *ni_id);

** AIOP SL Release v0.5.3.2 **

mc_init.c             AIOP boot will not fail if there are no DPCIs in DPL.
dpni_drv.c:           Set hard coded values for head room and tail room for:
                      Head room: 96 bytes
                      Tail room: 54 bytes

** AIOP SL Release v0.5.3.1 **

fsl_cli:                Added MACRO: GET_AIOP_CLI_STRING(_args, _args_size) to receive AIOP command line string and it's size.

dpni_drv.c, fsl_dpni_drv.h:   Added API for "int dpni_drv_get_counter(uint16_t ni_id, enum dpni_counter counter, uint64_t *value)"
                              Function to receive dpni counters.

dpni_drv.c:                   Change for dpni_drv_register/unregister_rx_cb to set the cb function for packet processing in epid table.
                              Argument won't be passed to receive cb function (remove args)
                              New API: int dpni_drv_register_rx_cb(uint16_t ni_id, rx_cb_t *cb);
app_process_packet.c,
arena_test.c, ipf_demo.c,
ipf_demo.c, ipsec_fm_demo.c:  in app_process_packet_flow0() added call to sl_prolog() (must be at the beginning of each application cb function),
                              and added call to fdma_terminate_task(); to the end of each cb function (must end the cb function).

** AIOP SL Release v0.5.3.0 **
types_mw.h               Added macros for putting all executable code (functions) of a file into a certain section.
                         The macros should be defined as a pair  __START_xxx_CODE, __END_xxx_CODE both in *.c file and *.h file.
                         __START_HOT_CODE - start placing code in i-RAM, enclosed by __END_HOT_CODE.
                         __START_WARM_CODE - start placing code in Shared-SRAM,enclosed by __END_WARM_CODE.
                         __START_COLD_CODE - start placing code in DP_DDR,enclosed by __END_COLD_CODE.
- dpl.dts/dtb             Removed static icid assignment per container.
- cmdif_client.c          Fixed ENGR00344241, WS is now updated with AIOP icontext prior calling to async_cb.
                          Same fix as we have for cmdif_srv.c.
- tests/cmdif/README.txt  Updated README with description of the new tests inside cmdif_integ_dbg.elf.

- slab.c:             removed backward compatibility support for filling buffers. Application / Module should do it
                      by himself using call to: slab_register_context_buffer_requirements
- dpni_drv.c:         Added API to query AIOP storage profile attributes:
                      int dpni_drv_get_rx_buffer_layout(uint16_t ni_id, struct dpni_buffer_layout *layout);
                      Added API to get NI ID for connected DPNI.
                      int dpni_drv_get_connected_dpni_id(const uint16_t aiop_niid, uint16_t *dpni_id, int *state);
                      int dpni_drv_get_connected_aiop_ni_id(const uint16_t dpni_id, uint16_t *aiop_niid, int *state);
- fsl_icontext.h:     Added new API for AIOP isolation context - icontext_cmd_get().
- fsl_shbp_aiop.h:    New API for AIOP-GPP shared buffer buffer pools.
- cmdif_srv_flib.c:   Fixed ENGR00343203, to allow M_NUM_OF_INSTANCES of instances.
- cmdif_srv.c:        Fixed ENGR00343203, to allow M_NUM_OF_INSTANCES of instances.
- dpl.dts/dtb:        Added dpaiop object, it must be the first object.
- fsl_cmdif_client.h: Added comment that GPP data must be in Write-Back Cacheable and Outer Shareable memory.

- fsl_os.h:      Remove fsl_os_phys_to_virt()/fsl_os_virt_to_phys() functions.
- dpni_drv.c:    ENGR00341594 - resolved. ipv6_hxs_config set to: 0x2000
- fsl_icontext.h: Updated icontext_get() to support ENGR00341218: API to get the GPP ICID.
- os.c:          ENGR00341990 - resolved, added implementation for exception_handler

- fsl_icontext.h: Added new API for AIOP isolation context - icontext_aiop_get().
- slab.c,h:     Added implementation used by app_early_init, added slab_early_init.
                Application/ Module should register for buffers used by slab using: slab_register_context_buffer_requirements(
                uint32_t committed_buffs, uint32_t max_buffs, uint16_t buff_size, uint16_t alignment, enum memory_partition_id  mem_pid,
                uint32_t flags, uint32_t    num_ddr_pools)
                for management pools with lower performance (managed in DDR) the application should use the input - num_ddr_pools.
fsl_slab.h:     Added bit to flags in slab_create: For lower performance in management and using more than 1000 pools, the slab_create should be called with the flag:
                SLAB_DDR_MANAGEMENT_FLAG (defined in fsl_slab.h).


- dpl.dts/dtb               API changes due to changes in MC Firmware: renamed link -> connection, obj and peer to endpoint1 and endpoint2, delete type from dpni device.
- fsl_cmdif_client.h        API change: removed locks from struct cmdif_desc.
- cmdif_integration_test.c  Changed AIOP client test for CMDIF_ASYNC_CMD which is activated by ASYNC_CMD.
                            See aiopsl\tests\cmdif\README.txt.
- fsl_cmdif_flib_c.h        API change: moved async callback from cmdif_open_cmd() to cmdif_cmd().
- fsl_cmdif_client.h        API change: moved async callback from cmdif_open() to cmdif_send().
- fsl_slab.h:               prototype of the slab release callback function modified from int to void.
- slab.c, fsl_slab.h:       slab_create: API change - prefix_size, postfix_size were removed.
- slab.c/h, fsl_slab.h:     Update pool managment implementation to support management in SHRAM and DDR.
                            API change for slab_create: use mem_pid from enum.

- ls2085a_gpp/cmdif.h    Added NADK_DEBUG for DEBUG indication
- cmdif_client_flib.c    Placed user error checks under #ifdef DEBUG
- cmdif_srv_flib.c       Placed user error checks under #ifdef DEBUG
- cmdif_client.c         Added support for cmdif_close()
- cmdif_srv_flib.c       Added support for cmdif_session_close()
- slob.c                 Fix some memory leaks and other issues.
- platform.c             Add support for memory allocation from MEM_PART_SYSTEM_DDR.
- cmdif_client.c         Set BPID IVP inside cmdif_send(). BPID is not relevant for CMDIF.

** AIOP SL Release v0.5.2.0 **
- cmdif_srv.c:    Added support for ENGR00341218: Cmdif to support working with AIOP ICID and new API to get the GPP ICID that issued the cmd

- cmdif_srv.c:  Fix for ENGR339037 GPP-AIOP communication breaking.
                AIOP workspace will have AIOP ICID and AIOP AMQ before user callback is called.

- cmdif_srv_flib.c:  Fix for ENGR00341199 wrong malloc size in CMDIF server allocation.

- app.h/c:       Fixed ENGR00341738, added APP_MAX_NUM to app.h. Updated build_apps_array() in app.c.

- dpl.dts/dtb:   adding option DPNI_OPT_DIST_HASH to all dpnis to support dpni_drv_set_order_scope

- apps.h:       added 3 defines (3 more parameters were added to the aiop_app_init_info struct):
                /* Number of frame buffers in pool */
                #define DPNI_NUMBER_BUFFERS_IN_POOL      50
                /* Size of buffers in pool */
                #define DPNI_BUFFER_SIZE_IN_POOL         2048
                /* alignment of buffers in pool */
                #define DPNI_BUFFER_ALIGNMENT            64

- dpni_drv.c/fsl_dpni_drv.h: Added implementation for int dpni_drv_get_spid_ddr(uint16_t ni_id, uint16_t *spid_ddr);
                           and int dpni_drv_get_spid(uint16_t ni_id, uint16_t *spid_ddr);

- dpni_drv.c:                Added implementation to create storage profile with DDR bpid.
- config.c		 Change  AIOP Service Layer version to 1.0.0.
dpni_drv.c/fsl_dpni_drv.h: Adding support for dpni_drv_set_order_scope -
                           Function to set order scope source for the specified NI.
dpni_drv.c:          Adding support for concurrent / exclusive mode for specified NI.
                     int dpni_drv_set_concurrent(uint16_t ni_id),
					 int dpni_drv_set_exclusive(uint16_t ni_id)
                     EPID table configured to use concurrent mode in initialization by default.
Memory managment: added fsl_os_get_mem()- for allocating a 64 bit physical address from external memories,
                        fsl_os_put_mem() - for releasing memory allocated by fsl_os_get_mem()
                        fsl_malloc() - for allocating a 32 bit virtual address  from AIOP shared ram .
						fsl_free() - for releasing  meory allocated by fsl_malloc()
                        fsl_free() - for releasing from shared memory, allocated by fsl_malloc().
                        fsl_os_xmalloc(), fsl_os_xfree(), fsl_os_malloc(), fsl_os_free(),fsl_os_phys_to_virt(), fsl_os_virt_to_phys() are deprecated
                        and will be removed in  next release.
                        The following  replacement should be done in order to get rid of depricated functions.
                        Note that fsl_os_(x)malloc() and its corresponding fsl_os_(x)free() should be replaced simultaneously.
						fsl_os_xmalloc() with MEM_PART_DP_DDR,MEM_PART_SYSTEM_DDR,MEM_PART_PEB -> fsl_os_get_mem() with the same mem. partition.
                        fsl_os_xfree() with MEM_PART_DP_DDR,MEM_PART_SYSTEM_DDR,MEM_PART_PEB -> fsl_os_put_mem();
                        fsl_os_xmalloc() with MEM_PART_SH_RAM -> fsl_malloc()
                        fsl_os_xfree() that was allocated from MEM_PART_SH_RAM -> fsl_free()
                        fsl_os_malloc() -> fsl_os_get_mem(MEM_PART_DP_DDR)
                        fsl_os_free() -> fsl_os_put_mem()

- mem_mng.c slob.c     Fix CR:ENGR00337904 spinlock should have addresses in shared ram

- fsl_soc_spec_ls2085a.h:  Revert UART offset ( - 0x4000 ). The following flags must be added to simulator initialization cfg file:
                           duart1.use_ls2_reg_definition=false
                           duart2.use_ls2_reg_definition=false

** AIOP SL v0.4.8 **
fsl_icontext.h: Added new API for AIOP isolation context - icontext_aiop_get().

** AIOP SL v0.4.7 **
De-coupled user-configured parameters from the aiopsl library.
Changes include:
- Added apps.h file which should be edited by application developers to suit application requirements.
- Application developers must add the following search path to the application compilation:
        "${ProjDirPath}/../../../../src/drivers/dpmng/controllers/aiop"
- Application developers must add the file src\arch\ppc\platform\ls2085a_aiop\config.c to the application build process.

** AIOP SL v0.4.6 **
- Remove Simulator flag: set_iram_instruction_fetch_view.

** AIOP SL v0.4.5 **
- cmdif_integ_dbg.elf      Placed compiled AIOP<->GPP CMDIF test at aiopsl\build\aiop_sim\tests\cmdif_test\integ_out\.
- tests/cmdif/README.txt   Added information about CMDIF testing with GPP.
- fsl_soc_spec_ls2085a.h:  Update UART offset ( + 0x4000 ). The following flags must be removed from simulator initialization cfg file:
                           duart1.use_ls2_reg_definition=false
                           duart2.use_ls2_reg_definition=false
** AIOP SL v0.4.4 **
- config.c                   The default value of PEB size in aiop_app_init_info has been descreased to 512 KB.
                             Application should not require more than this number.
- ls2085a_sim_init_params.cfg  Removed  qman.bg_update=false, bman.bg_update=false (ENGR00331346 sim bug is fixed on sim_m122)
- dpl.dts:                     Changed AIOP portal id, icid, and dpci id.
- dpl.dts:                     Added DPRC_CFG_OPT_IOMMU_BYPASS to root container due to changes in MC firmware
- ls2085a_sim_init_params.cfg  Removed  aiop.isolation_enable=false, added qman.bg_update=false, bman.bg_update=false (ENGR00331346 sim bug)

- dpni_drv.c, fsl_dpni_drv.h: API change for mfl functions from: dpni_drv_get/set_mfl(uint16_t ni_id, const uint16_t *mfl /uint16_t mfl)
                              to: dpni_drv_get/set_max_frame_length(uint16_t ni_id, const uint16_t *mfl /uint16_t mfl)
- dpni_drv.c, fsl_dpni_drv.h: added suport for promisc to multicast and unicast. The functions are: int dpni_drv_set_multicast_promisc(uint16_t ni_id, int en),
                              int dpni_drv_get_multicast_promisc(uint16_t ni_id, int *en), int dpni_drv_set_unicast_promisc(uint16_t ni_id, int en),
                              int dpni_drv_get_unicast_promisc(uint16_t ni_id, int *en)
							  Arena test updated acordingly.

- dpni.c:       API change in dpni functions from: (struct dpni *dpni) to:  (struct fsl_mc_io *mc_io, uint16_t token)

- dpl.dts/dtb:    Added DPRC_CFG_OPT_TOPOLOGY_CHANGES_ALLOWED to AIOP container.
- fsl_icontext.h  New API for isolation context aware memory accesses and for BMAN pool.
- config.c        Fill real default addresses values in aiop_sl_init_info. Those addresses correspond to the ones that MC fills.
- config.c        Create a new file where  the user is supposed to define aiop_init_data structure.
- fsl_platform.h  Added MEM_PART_MC_PORTALS and MEM_PART_CCSR memory partitions.
- slab.c          If given more when supported number of bpids in layot file, the dpbp_add will ignore them without error return.
                  The slab will only notify about the error.
- aiop_link.lcf  Added variables AIOP_DDR_START and AIOP_DDR_END that mark start and end of AIOP image that is put into DP_DDR.
                 These  variables must appear in linker for proper AIOP memory partition creation.
- platform.c     AIOP memory paritions are built dynamically based on aiop_app_init_info structure that is filled on MC side.

- .cproject (all)   Added paths to "${ProjDirPath}/../../../../src/drivers/dplib" and "${ProjDirPath}/../../../../src/mc/include"
- time.c:           Added time_init/free in global modules to support time period received from MC. If time period is 1000 then pointer function set up to use fast implementation,
                    otherwise an error will appear. (to support slow implementation we must use division in AIOP).

- init.c aio_link.lcf          Change AIOP virtual addresses according to new ATU windows settings that are done in aiop_drv.c.
- platform.c, init.c, fsl_soc_spec_ls2085a.h: UART port/offset configured by MC.

- fsl_slab.      New API for slab increment/decrement reference count: int slab_refcount_decr(uint64_t buff), void slab_refcount_incr(uint64_t buff).

- slab.c:        New implementation for slab release, refcount_incr, refcount_decr using approach 1 (The user is responsible to call slab release if reference count is 0 (return 0x3)).

- mc_init.c          Use g_init_data.sl_data.mc_portal_id instead of hard coded 1.
- init.c             Added g_init_data structure for AIOP<->MC comunication.
- aiop_link.lcf      Added MC<->AIOP shared structure inside memory_data, at AIOP_INIT_DATA.

- time.c/h fsl_time.h:         Optimization was made for time queries (fsl_get_time_ms() and fsl_get_time_since_epoch())

- fsl_soc.aiop_spec.h          Deleted FSL_OS_MOD_CMDIF_SRV.
- cmdif_srv.c                  Removed sys_get_handle(FSL_OS_MOD_CMDIF_SRV) as part of optimization.
- aiop_link.lcf                LCF cleanups, removed unused memory regions.
- dpni/drv.h                   Added fsl_mc_init.h which may lead to missing path compilation errors.
                               ARENA users should not include drv.h file but only fsl_dpni*.h.
- cmdif_client_aiop.h   Verify CMDIF_OPEN_SIZE in preprocessor time.
- cmdif_server_aiop.h   Verify CMDIF_SESSION_OPEN_SIZE in preprocess time.
- fsl_cmdif_client.h    Added CMDIF_OPEN_SIZE, see cmdif_open().
- fsl_cmdif_server.h    Added CMDIF_SESSION_OPEN_SIZE, see cmdif_session_open().
- ls2085a_sim_init_params.cfg  Added sim.enable_smmu=true
- fsl_cmdif_client.h    Removed physical addresses from external API, when SMMU is enabled virt to phys is not required.
                        cmdif_send() data pointer is still of uint64_t type, this is because GPP virtual addresses are 39 bit
                        and AIOP and GPP are going to use the same virtual address space.
- fsl_cmdif_server.h    Removed physical addresses from external API, when SMMU is enabled virt to phys is not required.
- cmdif_srv.c        Read AMQ bits and ICID from ADC and FD
- cmdif_client.c     Keep AMQ bits and ICID per dpci
- cmdif_srv_flib.c   Updated cmdif_srv_open().
- slab.c/h:          slab_module_init(): was modified to allocate memory for all buffers to avoid using malloc in runtime.
                     slab_find_and_fill(): renamed to slab_find_and_reserve() and now it just tryies to reserve buffers for
                                           the service layer (no allocation in runtime)
                     slab_module_free(): free buffers from bman pool before freeing slab module memory
                     static inline int find_bpid(): API was changed, two parameters: uint16_t *alloc_buff_size,
                                                    uint16_t *alloc_alignment removed.
- virtual_pool.c:    vpool_decr_total_bman_bufs(): added spin-lock and condition to check if number of remaining
                                                   buffers is big enough to give buffers for the service layer.
- dpl.dts/dtb:       Added DPRC_CFG_OPT_IOMMU_BYPASS to AIOP container. AIOP is trusted entity therefore PL and BMT should be set.
- fsl_cmdif_flib_s.h API chnage at cmdif_srv_cmd() to support virtual aadresses when SMMU is disabled.
- fsl_cmdif_flib_c.h API chnage at cmdif_async_cb() to support virtual aadresses when SMMU is disabled.
- cmdif.h            Move CMDIF_EPID define from cmdif_clien.h to cmdif.h architecture dependent file.
- init.c:            Adding epid_drv_init module to initialize epid table for tman, cmd-intr, nis.
- aiop_common.h:     enum for epid table was added.
- fsl_io_ccsr.h:     #ifdef CCSR_BE removed to use big endian convention to access ccsr in AIOP.
- cmdif_client.c:    read/write calls from ccsr were changed to use iowrite32_ccsr/ioread32_ccsr defines.
- cmdif_srv.c:       read/write calls from ccsr were changed to use iowrite32_ccsr/ioread32_ccsr defines.
- dpni_drv.c:        read/write calls from ccsr were changed to use iowrite32_ccsr/ioread32_ccsr defines.
- time.c:            read/write calls from ccsr were changed to use iowrite32_ccsr/ioread32_ccsr defines.
- platform.c:        read/write calls from ccsr were changed to use iowrite32_ccsr/ioread32_ccsr defines.
- kernel\fsl_io_ccsr.h: added to make an envelop to ioread/write's from ccsr using iowrite32_ccsr/ioread32_ccsr defines.
- fsl_slab.h         Updated slab_release() API documentation with new error for fix of ENGR00307395.
- slab.c             Fixed ENGR00307395 slab_release error, better protection from user errors.
- dpni_drv.c/h:      Adding support for dpni_drv_get_spid to receive NI's storage profile ID
- init.c             Modified fill_bpid() to take ICID + BPDI from CDMA CFG registers.
- mc_init.c          Moved AIOP<->MC dpci creation from DPL to AIOP dpci init. It should not be exposed to users. DPCI#0 belongs to MC.
- slab.c:            Fixed ENGR00312975 slab_debug_info_get() command should estimate the slab whether is valid
- slab.c             Read AIOP ICID and BDI from CDMA CFG register.
- aiopsl\misc\tools\instruction_trace:  added tool (script and readme) to save instruction trace in to a file.

** AIOP SL v0.4.3 **

- fsl_cmdif_client.h           Improved documentation
- fsl_cmdif_server.h           Improved documentation
- app_process_packet.c:        The demo was updated and now makes a reflection for received packets. (Flip the MAC and IP source and destination addresses)

- build/aiop_sim/aiopsl/.cproject                     Disable AIOP e_ldw/e_stdw code generation WA for CW 10.0.10 bug
- build/aiop_sim/apps/app_process_packet/.cproject    Disable AIOP e_ldw/e_stdw code generation WA for CW 10.0.10 bug
- build/aiop_sim/tests/arena_test/.cproject           Disable AIOP e_ldw/e_stdw code generation WA for CW 10.0.10 bug
- build/aiop_sim/tests/cmdif_test/.cproject           Disable AIOP e_ldw/e_stdw code generation WA for CW 10.0.10 bug
- build/aiop_sim/tests/inet_test/.cproject            Disable AIOP e_ldw/e_stdw code generation WA for CW 10.0.10 bug

- platform.c, init.c:  Change to use uart2_0 for AIOP

** AIOP SL v0.4.2 **

- fsl_cmdif_client.h Added Cautions - automatic expansion of the buffer is not available
- arena_test.c:      updated to show which task/core was active during the test. (multi task should be supported in next simulator - 118)

- cmdif_client.c:    Pass PRC_GET_SEGMENT_ADDRESS to cmdif_cb_t, same as for AIOP server.
- cmdif_client.c:    Replaced cdma_read/write by fdma_dma_data for SMMU support.
- cmdif_srv.c:       Replaced cdma_read/write by fdma_dma_data for SMMU support.

- fsl_cmdif_server.h  API changes at cmdif_session_open() cmdif_session_close()
- fsl_spinlock.h      Doxygen update
- fsl_dbg.h           Doxygen update

updated doxygen for:
	src\include\common\fsl_stdio.h
	src\include\common\fsl_stdlib.h
	src\include\dplib\fsl_dpni_drv.h
	src\include\fsl_endian.h
	src\include\fsl_errors.h
	src\include\fsl_io.h
	src\include\fsl_time.h
	src\include\net\fsl_inet.h

- fsl_stdlib:       fsl_os_exit moved to errors.h

- os.c:             Update implementation for time queries
- time.c/h:         Update implementation for time queries

- cmdif_srv.c         Fixed EP table setup no PTA and no ASA, see ENGR00322744
- cmdif_client.c      Fixed EP table setup no PTA and no ASA, see ENGR00322744

- init.c:             Set PLTFRM_MEM_RGN_CCSR size to 16 MB, MEM_PART_DP_DDR to 256 MB according to ATU windows' size.
- aiop_link.lcf:      Set dp-ddr segment size to 256 MB ( according to AIOP memory map)
- aiopsl/build/aiop_t4ls_sim: changed to aiopsl/build/aiop_sim
                              This change involved files related to all the projects in AIOP
                              (.xml, .cproject, .launch, .project files)

- init.c:             update real physical addresses for PEB and DP_DDR, move PEB memory area by 2 MB to avoid ovelapping with MC
- arena_test.c:       add memory_test.
        Update all aiop_sl git to use ls2085a instead of ls2100
        Rename/remove ls2100 directories/files
        update all paths and project files accordingly.
        list of affected files bellow.
{ /*ls2100a -> ls2085a*/
- build\aiop_t4ls_sim\aiopsl\.cproject
- build\aiop_t4ls_sim\aiopsl\.project
- build\aiop_t4ls_sim\apps\app_process_packet\.cproject
- build\aiop_t4ls_sim\apps\app_process_packet\Referenced Systems\AFM_Target.rse.xml
- build\aiop_t4ls_sim\apps\app_process_packet\src\README.txt
- build\aiop_t4ls_sim\apps\ipf_demo\.cproject
- build\aiop_t4ls_sim\apps\ipf_demo\Referenced Systems\AFM_Target.rse.xml
- build\aiop_t4ls_sim\apps\ipf_demo\src\README.txt
- build\aiop_t4ls_sim\apps\ipr_demo\.cproject
- build\aiop_t4ls_sim\apps\ipr_demo\Referenced Systems\AFM_Target.rse.xml
- build\aiop_t4ls_sim\apps\ipr_demo\src\README.txt
- build\aiop_t4ls_sim\apps\ipsec_fm_demo\.cproject
- build\aiop_t4ls_sim\apps\ipsec_fm_demo\src\README.txt
- build\aiop_t4ls_sim\build_flags\build_flags.h
- build\aiop_t4ls_sim\cw_files\aiop_link.lcf
- build\aiop_t4ls_sim\sim_files\ls2085a_sys_test.cfg
- build\aiop_t4ls_sim\tests\arena_test\.cproject
- build\aiop_t4ls_sim\tests\arena_test\Referenced Systems\AFM_Target.rse.xml
- build\aiop_t4ls_sim\tests\arena_test\src\README.txt
- build\aiop_t4ls_sim\tests\cmdif_test\.cproject
- build\aiop_t4ls_sim\tests\cmdif_test\CFG\LS2085A-AFM_AIOP.mem
- build\aiop_t4ls_sim\tests\cmdif_test\CFG\LS2085A-AFM_AIOP_RAM.tcl
- build\aiop_t4ls_sim\tests\cmdif_test\Referenced Systems\AFM_Target.rse.xml
- build\aiop_t4ls_sim\tests\inet_test\.cproject
- src\arch\ppc\platform\ls2085a_aiop\cmdif.h
- src\arch\ppc\platform\ls2085a_aiop\fsl_soc_aiop_spec.h
- src\arch\ppc\platform\ls2085a_aiop\fsl_swab.h
- src\arch\ppc\platform\ls2085a_aiop\init.c
- src\arch\ppc\platform\ls2085a_aiop\platform.c
- src\arch\ppc\platform\ls2085a_aiop\platform.h
- src\arch\ppc\platform\ls2085a_aiop\platform_aiop_spec.h
- src\arch\ppc\platform\ls2085a_gpp\cmdif.h
- src\arch\soc_db\fsl_soc.h
- src\arch\soc_db\fsl_soc_spec_ls2085a.h
- tests\aiop_core_lib\build\aiop_core_lib_verif\.cproject
- tests\malloc_test.c
- tests\random_test.c
} /*ls2100a -> ls2085a*/

- build\aiop_t4ls_sim\aiopsl\.cproject                        Update paths in user and system include
- build\aiop_t4ls_sim\apps\app_process_packet\.cproject       Update paths in user and system include
- build\aiop_t4ls_sim\tests\arena_test\.cproject              Update paths in user and system include

- dpni_drv.c/fsl_dpni_drv.h: adding support for api to dpni_drv_set_mfl(uint16_t ni_id, const uint16_t mfl)
                             and dpni_drv_get_mfl(uint16_t ni_id, uint16_t *mfl)

- dpl.dts/dtb:        updated, one dpbp entry removed
- init.c:             getting first DPBP from container to use for frame buffers
- slab.c:             adding slabs initialization for bpids received from container.
- slab.h:             updating the slab struct to be organized due to block size priority.


- cmdif_integration_test.c  Added test for data modification.

- cmdif_srv.c           Use fsl_os_rand() instead of rand().
- mc_init.c             Updated dpci discovery table size to be dynamic according to number of DPCIs.
- cmdif_client.c        Fixed multitask support for cmdif_open on AIOP client. Moved client table to SHRAM.
- ls2100a_gpp/cmdif.h   Moved platform dependent includes from cmdif flibs into this file.
- ls2100a_aiop/cmdif.h  Moved platform dependent includes from cmdif flibs into this file.

** AIOP SL v0.4.1.update_02 **
- dpl.dts:For         To support of adding multicast mac addresses. the following options should be added to
                      the the dpni in layout file:
                      options = "DPNI_OPT_MULTICAST_FILTER" , "DPNI_OPT_UNICAST_FILTER";

src/include/kernel/console.h:         removed
src/include/dplib/fsl_dpsw_cmd.h:     removed

- fsl_duart.h:        moved from src/include/drivers to src/drivers/serial/include/fsl_duart.h
                      include paths updated accordingly.

- fsl_cmdif_server.h  Added documentation for ctrl_cb_t.
                      AIOP server will pass as data address to the start of presentation segment.
- README.txt          Move to LS_SIM_m0116.
- fsl_sys:            added include for fsl_soc_aiop_spec.h to solve compilation error.
- arena_test.c:       added test for fsl_os_gettimeofday()
- fsl_time.h:         Added implementation for fsl_os_gettimeofday(). added stub for fsl_os_current_time()
- time.c:             added internal _gettime() method, used by time function to receive time since epoch
                      in microseconds for CM GW TS registers

- dpni_drv.c:         Added multicore support to dpni_drv_unregister_rx_cb and dpni_drv_register_rx_cb
                      added fix for storing spid
- drv.h:              uint8_t dpni_lock was added to support multicore

- cmdif_integration_test.c  Added test for AIOP client.

- dpl.dts             Updated DPL with DPCI devices and set icid for GPP container to 0.
- cmdif_client_flib.c Updated the code to support GPP and MC architectures.
- cmdif.h             Added architecture dependant files per architecture ls2100a_aiop, ls2100a_gpp.
- cmdif_srv_flib.c    Added CMDIF server FLIB code which implements fsl_cmdif_flib_s.h API.
- fsl_cmdif_*.h       All CMDIF API has been moved from src/include/common to src/include/kernel.
- cmdif_client.c      Added AIOP asynchronious client for GPP server.
- cmdif_srv.c         Updated AIOP server to support new DPCI (MC 0.4.2).

- src/include/common/slob.h			moved to src/lib/fsl_slob.h
- fsl_slab.h		moved to src/include/lib/fsl_slab.h , all includes are updated accordingly.
- fsl_malloc.h 		moved to src/include/fsl_malloc.h , all includes are updated accordingly.
                    Remove functions: fsl_os_malloc_debug(), fsl_os_xmalloc_debug(),
					fsl_os_buff_get_num_of_blocks(), fsl_os_buff_get_size(), fsl_os_buff_inc_refcnt(),
					fsl_os_buff_dec_refcnt_n_release(), fsl_os_buff_release(), fsl_os_buff_acquire().
- time.h:           moved to kernel/inc/fsl_time.h
- dpni_drv.h:       split to src/include/dplib/fsl_dpni_drv.h and src/drivers/dplib/include/dpni_drv.h
                    fsl_dpni_drv.h (exposed to users) all includes updated accordingly

- fsl_io.h:         added workaround to iowrite64 for disabling inline, CQ ENGR00319764

- README.txt        updated to support working with ELF loader by default
- list.h:           moved to src/lib/fsl_list.h, all includes updated accordingly.
- dpl.dts:          change MAC address for dpni 2 to 00:00:02:00:00:02 (dpl.dtb was updated accordingly)
- errors.h:         split to errors.h and fsl_errors.h for users. errors.h moved to src/kernel/inc, all include paths
                    updated accordingly.

- fsl_dbg           added device query: dbg_get_core_id(), dbg_get_num_of_cores(), dbg_get_max_num_of_cores()
- gen.h:            moved from include/common to kernel/inc/fsl_gen.h
                    include paths updated accordingly.
- io.h:             moved from include/common to include/fsl_io.h
                    update include paths in all c and h files in aiop git.

- fsl_dbg.h:        created to expose pr_debug, pr_info, etc to the users.
- dbg.h:            split to dbg.h and fsl_dbg.h, move from include/common/dbg.h to krenel/inc/dbg.h
                    pr_error, pr_debug etc moved to fsl_debug which is exposed to users and in innclude/fsl_dbg.h
                    all the include paths updated accordingly.
- .project:         updated to know fsl_dbg.h and fsl_io.h


- dpni_drv.c:      aiop_replace_parser removed and profile_parser_init was added to initialize
                   default prpid for NI'S
- io.h:            inline was added to all iowrite/read calls (supported in CW 10.0.8 and higher)
- dpni_drv.c/h:    Added support for dpni_drv_add/remove_mac, broadcast MAC is added to all ni's by default.

- src\include\arch\ls2100a\platform_aiop_spec.h: Rename:
                                MEM_PART_1ST_DDR_NON_CACHEABLE->MEM_PART_DP_DDR
								MEM_PART_2ND_DDR_NON_CACHEABLE ->MEM_PART_SYSTEM_DDR
								Changed usage of old constants into new ones all over source files.
- src\include\common\errors.h:   update pr_debug define to work in runtime mode  with vsnprintf_lite.

- smp.h/c:              new API added: sys_get_num_of_cores() and sys_get_max_num_of_cores()
- os.c:	                Implementation for vsnprintf_lite to reduce stack size in fsl_os_print, will be used in runtime.
                        vsnprintf_lite supports only: "%c", "%s", "%x", "%d", "%l", "%lx", "%ll", "%llx".

- io.h:                        iowrite/read were changed to call new defines for endianess support with intrinsics.
- fsl_endian.h:                new implementation to endian.h, support endianess treatment.
- endian.h:                    removed.
- fsl_swab.h:                  architecture dependent to support swap bytes for read/write operations.
                               .cproject for new project should be aware about the path to arch:
                               src\arch\ppc\platform\ls2100a_aiop

- mc_init.c:                   New driver for common MC objects creation.
- fsl_cmdif_fd.h:              New file for client & server CMDIF flibs, describes command interface Frame Descriptor
- fsl_cmdif_flib_c.h:          New file for client CMDIF flibs
- fsl_cmdif_flib_s.h:          New file for server CMDIF flibs
- fsl_cmdif_flib.h:            Replaced this file by 2 new files fsl_cmdif_flib_c.h and fsl_cmdif_flib_s.h
- fsl_cmdif_server.h:          API change in ctrl_cb_t, data is physical address.

** AIOP ARENA SL Alpha v0.4.1_update01 **
- Updated API to synch with MC FW v0.4
** AIOP ARENA SL Alpha v0.4.1 **
- spinlock fix for multi core.

- init.c:               Added MULTICORE_WA.
- spinlock.h                    spinlock.h file renamed to fsl_spinlock.h
- app_process_packet.c: Added cmdif_register_module() example.

** AIOP ARENA SL Alpha v0.4 **
- console.c                     Bug fix: removed nested spinlock from: sys_debugger_print()
- init.c                        AIOP multicore boot: wait for all cores before enabling CTS
- fsl_inet.h:                   Renamed inet.h to fsl_inet.h
- ls2085a_sim_init_params.cfg:  New file at aiopsl\build\aiop_t4ls_sim\sim_files, see README.txt inside app_process_packet.
- ls2100_sys_test.cfg:          New file at aiopsl\build\aiop_t4ls_sim\sim_files, see README.txt inside app_process_packet.
- dpl.dtb:                      New file at aiopsl\build\aiop_t4ls_sim\sim_files, see README.txt inside app_process_packet.
- dpl.dts:                      New file at aiopsl\build\aiop_t4ls_sim\sim_files, see README.txt inside app_process_packet.
- README.txt:                   Updated app_process_packet with new instructions for MC integrated mode

- init.c, dpni_drv.c, cmdif_srv.c, app_process_packet.c:      define AIOP_STANDALONE to run AIOP standalone.
                            By default will run in MC integrated mode.

- sys.c:                    Added UART multi core support

- sys.c:                    New implementation for sys handle methods. (Add, Get, Remove)
- sys.h:                    New implementation for sys handle methods.
- fsl_sys.h:                sys.h which is supplied to customers renamed to fsl_sys.h

- aiopsl\.project:          added serial folder to project(uart.h, uart.c)
- init.c:                   added support for UART on AIOP
- platform.c:               added support fort UART on AIOP, prints will be redirected to UART 0
- duart.c:                  added to project, fixed to support uart on AIOP
- duart.h:                  added to project
- fsl_soc_spec.h:           wrote hard coded address for DUART
- fsl_duart.h:              fixed doxygen

- aiop_link.lcf:      Added .psram_data .psram_bss for Profile SRAM.
- fsl_cmdif_server.h: New file for CMDIF server API. Use this API for cmdif_register_module().
- fsl_cmdif_client.h: New file for CMDIF client API.
- fsl_aiop_cmdif.h:   The file has been removed.
- fsl_cmdif.h:        Removed server API, now it includes only AIOP to MC client API which should be used only by dplib drivers.

- Added a new  application {aiopls}\build\aiop_t4ls_sim\tests\arena_test.
   It contains slab  functionality (slab create in init pahase and  slab aquire in run-time and slab release)
   malloc() from the heap and xmalloc() from  DP-DDR, SHARED RAM and PEB memory partitions in init and ruin-time phase.
- The demo application app_process_packet contains only basic functionality of precessing a received packet.
   Slab related test has been moved to arena_test application.

- type_mw.h:     Added define for __WARM_CODE to load code to shared ram
- aipo_link.lcf: Added .stext and .stext_vle define for code to be placed in shared ram

- init.c, main.c: Added stack overflow detection using DAC1/DAC2 registers, MCSRR0 stores PC of instruction caused the exception.
- os.c:           Added implementation for fsl_os_rand().
- init.c:         Added seed variable in tls section for each task (seed_32bit).
- fsl_stdlib.h:   Added prototype for fsl_os_rand().
- platfom.c:      in function "pltfrm_init_core_cb" added initialization of seed to each task when
                  initializing the core.

- os.c:           Fixed atomic_decr32(), atomic_decr16(), atomic_decr8(), atomic_incr8()
- fsl_slab.h:     API change from slab_free(struct slab *slab) to slab_free(struct slab **slab).
                  Fixed ENGR00307828.

** AIOP ARENA SL Pre-Alpha v0.3.3  **
- app_receive_cb.c:     This file has been removed
- app_process_packet.c: Set EP_PC for EPID 0 by SW.

- aiop_link.lcf:   Remove .receive_cb segment, EPID 0 is setup by SW in aiop_process_packet.
- aiop_link.lcf:   Added fix to suport macros for __SHRAM and __HOT_CODE, stack size adjusted.
- types_mw.h:      Added fix to suport macros for __SHRAM and __HOT_CODE.

- fsl_slab.h:      Changed slab_debug_info.max_buffs to 32 bit
- cmdif_test.c:    Added CMDIF reflector and Client Server test. This test tests AIOP side Server.
                   See {aiopls}\build\aiop_t4ls_sim\tests\cmdif_test\README.txt
- event_mgr.h:     This file has been removed
- event_mgr.c:     This file has been removed
- .project aiopsl: Removed event_mgr.c and event_mgr.h

- fsl_slab.h:    Changed num_buffs to be 32 bit and renamed extra_buffs to max_buffs
- slab.h:        Changed num_buffs to be 32 bit
- slab.c:        Removed buff_size from CDMA based API
- aiop_link.lcf: stack size for init_task changed to maximum allowed size.
- platform.c:    number of taskes per core changed to 16.

** AIOP ARENA SL Pre-Alpha v0.3.2  **
- slab.h:        added slab_refcount_incr(), slab_refcount_decr()
- aiop_link.lcf: added TLS_SECTION_END_ADDR, it's required for AIOP SL.

- start.c:      added support for small data sections.
- slab.h:       added static table of BPID, size, mem partition; DDR sizes 256 - 4096, PEB sizes 256 - 4096.
- init.c/h:     added implementation and declaration for: ntohs, ntohl, htons, htonl. Codding style update.
- dpni_drv.c/h: placed MC-dependent code under #ifdef MC_INTEGRATED to enable running in standalone AIOP environment
- init.c:       placed MC-dependent code under #ifdef MC_INTEGRATED to enable running in standalone AIOP environment
- dpni_drv.c/h: fixed dpni_get_primary_mac_addr() bug, API modified
- dpni_test.c:  fixed dpni_get_primary_mac_addr() bug, API modified

** AIOP ARENA SL Pre-Alpha 0.3.1 **
- dpni_test.c:  new demo application that works with the DPNI object.
- dpni_drv.c/h: added DPNI support - DPNI discovery and enablement.
- dpni_drv.c/h: added dpni_drv_unregister_rx_cb(), dpni_drv_get_primary_mac_addr().
- os.c: added workaround for fsl_os_printf stack overflow issue
- event_mgr.h: fixed typo in evm_deregister_callback() function name.
- slab.c:  Fixed ENGR00303738. slab_release() calls vpool_refcount_decrement_and_release()instead of vpool_release_buff()
- slab.h:  Added slab_find_and_fill_bpid() SL internal API

** AIOP ARENA SL Pre-Alpha 0.3 **
- .cproject app_process_packet: Set small data and small data2 to 0 at PowerPC CPU settings
- .cproject aiopsl:             Set small data and small data2 to 0 at PowerPC CPU settings

- app_process_packet.c: updated SLAB test and removed flow1 test
- fsl_slab.h:           Changed type of SLAB handle, updated documentation
- API Change:           change fsl_os_malloc_smart()->fsl_os_xmalloc() , fsl_os_free_smart()-> fsl_os_xfree()
- fsl_slab.h:           Added extra_buffs for slab_create() API
- app_process_packet.c: Added SLAB test inside app_process_packet_flow1() of app_process_packet demo
- app_process_packet.c: Added SLAB test inside app_init() of app_process_packet demo

- gen.h:         Added ALIGN_UP, ALIGN_DOWN macros
- aiop_link.lcf: Moved app_receive_cb() to the start of IRAM and fixed IRAM size to 128K
- fsl_slab.h:    Added new file with SLAB API
- slab.h:        AIOP HW SLAB implementation
- slab.c:        AIOP HW SLAB implementation

** AIOP ARENA Feb 4, 2014 **
- Changed i_ram to start at 0xfe0000 in aiop_link.lcf in order to match simulator
- Removed evm_register_callback stub in order to avoid conflict with app level stub implementation.

** AIOP ARENA V1.1 Change Log **
- Added a new sample CW project app_process_packet that is located under {aiopsl}\build\aiop_t4ls_sim\apps\app_process_packet.
- aiop_link.lcf: Updated tls memory inside aiop_link.lcf that is located under {aiopsl}\build\aiop_t4ls_sim\cw_files.
- dpni_drv.c: Modified dpni_drv_init() inside dpni_drv.c that is located under {aiopsl}\src\drivers\dplib\dpni.
  Added parser profile id 0 initialization and fixed NI table initialization.
- main.c : Modified ARENA main inside main.c that is located under {aiopsl}\src\kernel.
  Added CTSCSR0[CTSEN] = 1 right before run_apps().
- platform.c : Modified pltfrm_init_core_cb() inside platform.c that is located under {aiopsl}\src\arch\ppc\platform\ls2100a_aiop.
  Removed CTSCSR0[CTSEN] = 1.
- Updated preprocessor settings in all ARENA demos to use dflags_dbg.h.
